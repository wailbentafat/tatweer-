/* eslint-disable react/no-unescaped-entities */
import React from "react";
import Head from "next/head";
import { ChakraProvider } from "@chakra-ui/react";
import { useAccount, useConnect } from "wagmi";
import { Button, Flex, Img, Text } from "@chakra-ui/react";
import { Header } from "@/components";

export default function Home() {
  const { connect, connectors, error, isLoading, pendingConnector } =
    useConnect();
  const { isConnected } = useAccount();

  return (
    <ChakraProvider>
      <Head>
        <title>MetaMask Connection</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex bg=" #FAF9F6" h="100vh" direction="column" justify="center">
        <Flex align="center" justify="space-around">
          <Flex w="full" top="0" position="absolute">
            <Header />
          </Flex>
          <Flex maxW="50rem" direction="column" px="24">
            <Text
              fontSize="5xl"
              color="black"
              fontWeight="bold"
              lineHeight="3.328rem"
            >
              Simple MetaMask connection using Wagmi
            </Text>
            <Text fontSize="md" color="black" lineHeight="1.21rem" py="10">
              wagmi is a collection of React Hooks containing everything you
              need to start working with Ethereum. wagmi makes it easy to
              "Connect Wallet," display ENS and balance information, sign
              messages, interact with contracts, and much more â€” all with
              caching, request deduplication, and persistence.
            </Text>
            {connectors.map((connector, index) => (
              <Button
                key={+index}
                bgGradient="linear(to-r, gray.300, orange.500)"
                w="full"
                _hover={{}}
                _active={{}}
                _focus={{}}
                h="2.75rem"
                position="relative"
                borderRadius="base"
                color="black"
                fontWeight="medium"
                fontSize="md"
                px="12"
                onClick={() => connect({ connector })}
                isDisabled={isConnected}
              >
                {isConnected ? "Already connected" : "Connect to MetaMask"}
              </Button>
            ))}
          </Flex>
          <Flex minW="30rem">
            <Img src="/images/woman-in-crypto-1.svg" boxSize="500px" />
          </Flex>
        </Flex>
      </Flex>
    </ChakraProvider>
  );
}
